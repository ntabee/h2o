worker_processes  8;

events {
    worker_connections  10240;
    accept_mutex_delay 100ms;
}

http {
lua_package_path "/usr/local/lib/lua/?.lua";
    include       mime.types;
    default_type  application/octet-stream;

    access_log off;

    sendfile on;
    open_file_cache max=100 inactive=20s;
    tcp_nopush on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;
        location / {
            root   /opt/osm/www;
            index  index.html;
        }

	location /tiles {

		access_by_lua '
                  local osm_tile = require "osm.tile"
                  local tirex = require "osm.tirex"
                  local map = ""
                  local x, y, z = osm_tile.get_cordination(ngx.var.uri, "/tiles", "png")
                  -- DO NOT ask tirex to render it (tirex is not set-up properly)
                  --local priority = 1
                  --local ok = tirex.request(map, x, y, z, z, priority)
                  --if not ok then
                  --    return ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
                  --end
                  local tilefile = osm_tile.xyz_to_metatile_filename(x, y, z)
                  local tilepath = "/opt/osm/ng_tiles/"..map.."/"..tilefile
                  local png, err = osm_tile.get_tile(tilepath, x, y, z)
                  if png then
                      ngx.header.content_type = "image/png"
                      ngx.print(png)
                      return ngx.OK
                  end
                  return ngx.exit(ngx.HTTP_NOT_FOUND)

                ';
		root /opt/osm/tiles/;
	}	
    }
}


